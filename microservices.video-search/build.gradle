
plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

apply from: "$rootDir/gradle/protobuf.gradle"
apply from: "$rootDir/gradle/test.gradle"

dependencies {

    implementation project(':starters.app-starter')
    implementation project(':starters.event-stream-starter')
    implementation project(':starters.crypto-starter')

    implementation project(':starters.telemetry-starter')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('io.micrometer:micrometer-registry-prometheus')


    implementation('org.springframework.boot:spring-boot-starter-webflux')

    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    // compile('org.springframework.boot:spring-boot-starter-aop')
    // compile('org.springframework.retry:spring-retry')

    implementation('org.springframework.cloud:spring-cloud-stream-binder-rabbit')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

    implementation('org.jooq:jooq:3.9.1')


//    implementation('org.springframework.cloud:spring-cloud-starter-consul-config')
//    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
//    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
//    implementation('org.springframework.retry:spring-retry')
//    compileOnly('org.projectlombok:lombok')
//    testImplementation('org.springframework.boot:spring-boot-starter-test')


//    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${project.'spring.cloud.version'}"
    }
}

springBoot {
    buildInfo()
}

processResources {
    filesMatching("**/*.properties") {
        expand(project.properties)
    }
    filesMatching("**/*.yml") {
        expand(project.properties)
    }
}

bootJar {
    launchScript()
}
